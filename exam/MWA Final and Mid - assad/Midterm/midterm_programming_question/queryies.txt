mongoimport --db rental --collection cars --file C:\Users\Shadi\Desktop\mum\MWA\midterm_programming_question\cars.json

1- get for a specifc car, get latest rent date , get latest end mileage 

2- check if a client have rental history, to give him a discount 5 %. So, for any car for a specific liscence id, but do not include current reservation record, get all reservation records for that person.

3- get car rental_rate for the current reservation_id

4- add reservation_record for a specific car
5- update rental_details - modify one of the array elements (update the reservation record by reservation id)
6- delete reservation_record



Answers:

1-

db.cars.find({"_id":ObjectId("5b1d5003c2c29d5c387b880a")},{"rental_details":1,"_id":0}).sort({"rental_details.end_mileage":-1}).pretty();
-- the sort did not work, so you have to sort using javascript code !

-- or it is working using aggregate
db.cars.aggregate([
	{$match:{"_id":ObjectId("5b1d5003c2c29d5c387b880a")}},
	{$unwind: "$rental_details" },
	{$sort:{"rental_details.rental_end_date":-1}},
	{$group:{_id:{"car_id":"$_id","car_plate":"$plate"},"end_mileage":{$first:"$rental_details.end_mileage"}}},
	{$project:{_id:0,"car_plate":"$_id.car_plate","end_mileage":1}}
]).pretty();

2-

db.cars.find({"rental_details.driver_license":"A3333333"}).pretty();
-- I do not think it could be done except with aggregate or programatically using javascript:

db.cars.aggregate([
	{$match:{"rental_details.driver_license":"A3333333"}},
	{$unwind: "$rental_details" },
	{$match:{"rental_details.driver_license":"A3333333", "rental_details.reservation_id":{$ne:"XXX"}}},
	{$group:{_id:{"driver_license":"$rental_details.driver_license"}, "rent_count":{$sum:1}}},
	{$project:{_id:0,"driver_license":"$_id.driver_license","rent_count":1}}
]);



3- 
db.cars.find({"rental_details.reservation_id":"A34567"},{_id:0,"rate_per_day":1}).pretty();

4-

db.cars.find({"_id":ObjectId("5b1d5003c2c29d5c387b880a")}).pretty();

db.cars.update(
	{"_id":ObjectId("5b1d5003c2c29d5c387b880a")},
	{ $push: 
		{ rental_details: 
                {
                        "reservation_id" : "A556677",
                        "driver_name" : "Shadi F.",
                        "driver_license" : "A66778899",
                        "rental_start_date" : "2018-06-01T16:18:35.634Z",
                        "start_mileage" : 11900
                }
		} 
	}
);


5-

db.cars.update(
	{"_id":ObjectId("5b1d5003c2c29d5c387b880a"),"rental_details.reservation_id":"A556677"},
	{$set:{
		"rental_details.$.rental_end_date":"2018-06-03T16:18:35.634Z",
		"rental_details.$.end_mileage":12500,
		"rental_details.$.rental_price":123
	}}
);

6-
-- this one replaces array element with null 
db.cars.update(
	{"_id":ObjectId("5b1d5003c2c29d5c387b880a"),"rental_details.reservation_id":"A556677"},
	{$unset:{
		"rental_details.$":1
	}}
);

db.cars.update(
  {"_id":ObjectId("5b1d5003c2c29d5c387b880a")},
  {$pull:{ 
	rental_details: {reservation_id: "A556677" } 
  }}
);
